--------------------------------------------------------------------------------

 ███████████            ███                    ███
░░███░░░░░███          ░░░                    ░░░
 ░███    ░███  ██████  ████   ██████   █████  ████   █████
 ░██████████  ███░░███░░███  ███░░███ ███░░  ░░███  ███░░
 ░███░░░░░░  ░███ ░███ ░███ ░███████ ░░█████  ░███ ░░█████
 ░███        ░███ ░███ ░███ ░███░░░   ░░░░███ ░███  ░░░░███
 █████       ░░██████  █████░░██████  ██████  █████ ██████
░░░░░         ░░░░░░  ░░░░░  ░░░░░░  ░░░░░░  ░░░░░ ░░░░░░

A GA4GH TES-compliant Task Execution Service (TES) designed
for Kubernetes.

Authored: Javed Habib (jaeaeich)

--------------------------------------------------------------------------------
Poiesis Deployment Summary:
--------------------------------------------------------------------------------
Services Used & Access Information:

Poiesis API:
  Service Name: {{ printf "%s-%s" (include "poiesis.fullname" .) "api" }}
  Port: {{ .Values.poiesis.service.port }}
  Access: Type '{{ .Values.poiesis.service.type }}'.
    {{- if eq .Values.poiesis.service.type "LoadBalancer" }} (Requires External IP assignment)
    {{- else if eq .Values.poiesis.service.type "NodePort" }} (Access via NodeIP:NodePort)
    {{- else if eq .Values.poiesis.service.type "ClusterIP" }} (For local access, use: kubectl port-forward svc/{{ printf "%s-%s" (include "poiesis.fullname" .) "api" }} {{ .Values.poiesis.service.port }}:{{ .Values.poiesis.service.port }})
    {{- end }}

MongoDB:
  {{- if .Values.poiesis.externalDependencies.mongodb.enabled }}
  Type: External
  URL/Host: {{ include "poiesis.mongodb.host" . }}:{{ include "poiesis.mongodb.port" . | trimAll "\"" }}
  {{- else if .Values.mongodb.enabled }}
  Type: Internal
  Service URL (within cluster): {{ include "poiesis.mongodb.host" . }}:{{ include "poiesis.mongodb.port" . | trimAll "\"" }}
  {{- else }}
  Type: Not Configured
  {{- end }}

Redis:
  {{- if .Values.poiesis.externalDependencies.redis.enabled }}
  Type: External
  URL/Host: {{ include "poiesis.redis.host" . }}:{{ include "poiesis.redis.port" . | trimAll "\"" }}
  {{- else if .Values.redis.enabled }}
  Type: Internal
  Service URL (within cluster, master): {{ include "poiesis.redis.fullname" . }}-master:{{ include "poiesis.redis.port" . | trimAll "\"" }}
  {{- else }}
  Type: Not Configured
  {{- end }}

Authentication (Method: {{ .Values.poiesis.auth.type | upper }}):
  {{- if eq .Values.poiesis.auth.type "oauth2" }}
  OAuth2 Provider:
    Issuer URL: {{ .Values.poiesis.auth.oauth2.issuer }}
    Poiesis Client ID: {{ .Values.poiesis.auth.oauth2.clientId }}
  {{- end }}

S3 Storage:
  {{- if .Values.poiesis.externalDependencies.minio.enabled }}
  Type: External S3-compatible
  Endpoint URL (for Poiesis): {{ include "poiesis.minio.url" . }}
  {{- else if .Values.minio.enabled }}
  Type: Internal Minio
  Service Name (within cluster): {{ include "poiesis.minio.fullname" . }} (API Port: typically 9000, Console: typically 9001)
  Configured URL for Poiesis: {{ include "poiesis.minio.url" . | trimAll "\"" }}
    (Note: Verify port in the URL above. If it's missing or incorrect, Poiesis may not connect.
     The helper relies on '.Values.minio.service.ports.api' which may not be set in parent values.)
  Default Bucket(s) Created: {{ .Values.minio.defaultBuckets }}
  For local Minio console access (if internal): kubectl port-forward svc/{{ include "poiesis.minio.fullname" . }} 9001:9001
  {{- else }}
  Type: Not Configured
  {{- end }}

--------------------------------------------------------------------------------
CRITICAL WARNINGS & ACTIONS:
--------------------------------------------------------------------------------
{{- if eq (.Values.poiesis.auth.type | lower) "dummy" }}
- DUMMY AUTH ENABLED: Poiesis is using insecure dummy authentication.
  DO NOT USE IN PRODUCTION. Change 'poiesis.auth.type' to 'oauth2'.
{{- end }}

- DEFAULT CREDENTIALS: Review and change default passwords/secrets for production.
  {{- if and (eq .Values.poiesis.auth.type "oauth2") (not .Values.poiesis.auth.oauth2.clientSecret) }}
  - Poiesis OAuth2 Client Secret ('poiesis.auth.oauth2.clientSecret') is not set. This is required if using a private client.
  {{- end }}
  {{- if and .Values.mongodb.enabled (eq (.Values.mongodb.auth.rootPassword | toString) "mongodbPassword123") }}
  - Internal MongoDB root password ('mongodb.auth.rootPassword') is default.
  {{- end }}
  {{- if and .Values.redis.enabled (eq (.Values.redis.auth.password | toString) "poiesisRedis123") }}
  - Internal Redis password ('redis.auth.password') is default.
  {{- end }}
  {{- if and .Values.minio.enabled (eq (.Values.minio.auth.rootPassword | toString) "minioPassword123") }}
  - Internal Minio root password ('minio.auth.rootPassword') is default.
  {{- end }}

{{- if eq .Values.poiesis.auth.type "oauth2" }}
- OAUTH2 INTEGRATION REQUIRED:
  - This Helm chart DOES NOT configure your OAuth2/OIDC provider.
  - ACTION: You MUST manually ensure that the OAuth2 client '{{ .Values.poiesis.auth.oauth2.clientId }}'
    is correctly set up in your provider (e.g., Keycloak, Auth0, Okta, etc.).
  - ACTION: If using a private client, the Poiesis API is configured to use the client secret specified in
    '.Values.poiesis.auth.oauth2.clientSecret'.
    VERIFY THIS SECRET MATCHES the one configured for the client within your provider.
  - Consult Poiesis and your OAuth2 provider's documentation for detailed setup instructions,
    including setting the correct callback/redirect URIs.
{{- end }}
